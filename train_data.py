import tfBlitz
import process_data
import cv2
import numpy as np
import model0

MODELS_FOLDER_PATH = r"D:\self-driving-car-data\models"

tweaks={
    'SHUFFLE_BUFFER_SIZE':1000,
    'BATCH_SIZE':40,
    'PREFETCH_NUM_OF_BATCHES':2
}

#    tfBlitz.py is tensorflow input pipeline made easy , normalize = True will return normalized data in float32 dtype used for training,
#    normalize = False will return the data as it is .
dataset = tfBlitz.dataset(process_data.SAVE_PROCESSED_DATA_FILEPATH,tweaks=tweaks,normalize=True)

# to check how well shuffled our data is and to make sure dataset generator is working properly

for x,y in dataset:
    for i in range(tweaks['BATCH_SIZE']):
        cv2.imshow('check_data',np.array(x[i]))  # VIEW EACH FRAMES NORMALIZED AND SHUFFLED
        cv2.waitKey(1)
        print(np.array(y[i]))  # VIEW THE LABELS OF EACH FRAME

# 7. TRAINING THE MODEL USING tfBlitz train test dataset generator
SAVE_MODEL_FILEPATH = MODELS_FOLDER_PATH + tfBlitz.getdateandtime()
TRAINING_DATA_FILEPATH = process_data.SAVE_PROCESSED_DATA_FILEPATH
INPUTSHAPE = (300,400,1)
INPUTBATCH = 40

#    THIS FUNCTION WILL SPLIT THE BALANCED DATA FILES INTO TRAINING SET AND TESTING SET BY ADJUSTING VALIDATION_FILES_SPLIT = 0.2 (20 % TEST SET)
#    HERE VALIDATION DATA IS 4 % OF THE TOTAL DATASET

train_dataset , test_dataset = tfBlitz.train_test_datasets(
    TRAINING_DATA_FILEPATH,tweaks=tweaks,normalize=True,validation_files_split=0.3
)

#    TRAINING THE MODEL WITH INPUT SHAPE , BATCH SIZE , TWEAKS AND TRAIN_DATASET , TEST_DATASET GENERATED BY BALANCED DATASET TFRECORD FILES
model0.train_model(INPUTSHAPE,INPUTBATCH,SAVE_MODEL_FILEPATH,train_dataset,test_dataset)

# 8. RUN THE predictmodel.py FOR TESTING THE TRAINED MODEL , INSTRUCTIONS ARE FOUND ON predictmodel.py